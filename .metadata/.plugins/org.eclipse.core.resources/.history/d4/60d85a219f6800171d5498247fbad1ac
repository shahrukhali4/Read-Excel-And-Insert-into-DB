package myProject;

import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import com.verizon.common.datacloud.DataCloud;
import com.verizon.common.datacloud.DataSourceCriteria;
import com.verizon.common.datacloud.DataSourceResult;
import com.verizon.common.datacloud.DataSourceResultSet;

public class Export {

	public static Connection getConnection() throws ClassNotFoundException,
	SQLException {
//		Map<String, String> dataBaseConnectionDetails = CachedSqlResults
//				.instance().getDataBaseConnectionDetails();

		/* Class.forName(dataBaseConnectionDetails.get("VNS_DRIVER_CLASS"));
		  return DriverManager.getConnection(
		  dataBaseConnectionDetails.get("VNS_JDBC_URL"),
		  dataBaseConnectionDetails.get("VNS_USER_NAME"),
		  dataBaseConnectionDetails.get("VNS_PASSWORD"));*/


		/*		Class.forName("oracle.jdbc.driver.OracleDriver");
		return DriverManager.getConnection(
				"jdbc:oracle:thin:@//uiiomtd1scan.vzbi.com:1800/TIPSM1",
				"ipsm_enva", "ipsm_enva");*/
		Class.forName("oracle.jdbc.driver.OracleDriver");
		return DriverManager.getConnection(
				"jdbc:oracle:thin:@//localhost:1521/TIPSM1",
				"ipsm_envc", "ipsm_envc");
	}
	
	
	 private static final String FILE_NAME = "C:\\Users\\syed.ali\\Desktop\\LMMS_VENDOR_LICENSE.xlsx";
//C:\Users\syed.ali\Desktop
	    public static void main(String[] args) {
	    	
	    	 try {

	             FileInputStream excelFile = new FileInputStream(new File(FILE_NAME));
	             Workbook workbook = new XSSFWorkbook(excelFile);
	             Sheet datatypeSheet = workbook.getSheetAt(0);
	             Iterator<Row> iterator = datatypeSheet.iterator();
	             DataSourceCriteria criteria =new DataSourceCriteria();
	             DataSourceResultSet resultSet=null;
	             
	             while (iterator.hasNext()) {

	                 Row currentRow = iterator.next();
	                 Iterator<Cell> cellIterator = currentRow.iterator();
	                 List list = new ArrayList();
	                 while (cellIterator.hasNext()) {

	                     Cell currentCell = cellIterator.next();
	                     //getCellTypeEnum shown as deprecated for version 3.15
	                     //getCellTypeEnum ill be renamed to getCellType starting from version 4.0
	                     if (currentCell.getCellType() == Cell.CELL_TYPE_STRING) {
	                         list.add(currentCell.getStringCellValue());
	                     } else if (currentCell.getCellType() == Cell.CELL_TYPE_NUMERIC) {
	                         list.add(currentCell.getNumericCellValue());
	                     }
	                     
	                     
	                     
	                     
	                 }
	                 String LICENSE_ID=(String) list.get(0);
	                 String LICENSE_FILE_NAME=(String) list.get(1);
	                 String LICENSE_FILE_DESCRIPTION=(String) list.get(2);
	                 String LICENSE_FILE=(String) list.get(3);
	                 
	                 String LICENSE_KEY=(String) list.get(4);
	                 String LICENSE_TYPE=(String) list.get(5);
	                 String VENDOR_NAME=(String) list.get(6);
	                 String EXPIRY_DATE=(String) list.get(7);
	                 String CREATED_BY=(String) list.get(8);
	                 String CREATED_AT=(String) list.get(9);
	                 String UPDATED_BY=(String) list.get(10);
	                 String UPDATED_AT=(String) list.get(11);
	                 String MODEL=(String) list.get(12);
	                 String COUNT=(String) list.get(13);
	                 String LICENSE_TYPE_ID=(String) list.get(14);
	               
	        
	                 Statement stmt = null;
	         		Connection con = null;
	         		ResultSet rs = null;
	         //		VnfServiceConfigHolder configHolder = null;
	         		
	         			con = getConnection();
	         			stmt = con.createStatement();
	         			
	         			String sql ="INSERT INTO LMMS_VENDOR_LICENSE (LICENSE_ID,LICENSE_FILE_NAME, LICENSE_FILE_DESCRIPTION, LICENSE_FILE, LICENSE_KEY, LICENSE_TYPE ,VENDOR_NAME, EXPIRY_DATE,CREATED_BY,CREATED_AT,UPDATED_BY,UPDATED_AT,MODEL,COUNT,LICENSE_TYPE_ID) VALUES ("+LICENSE_ID+","+LICENSE_FILE_NAME+","+LICENSE_FILE_DESCRIPTION+", "+LICENSE_FILE+", "+LICENSE_KEY+", "+LICENSE_TYPE+" ,"+VENDOR_NAME+", "+EXPIRY_DATE+","+CREATED_BY+","+CREATED_AT+","+UPDATED_BY+","+UPDATED_AT+","+MODEL+","+COUNT+","+LICENSE_TYPE_ID+")";
	         			rs = stmt.executeQuery(sql);  
	                 
	                 

	             }
	         } catch (FileNotFoundException e) {
	             e.printStackTrace();
	         } catch (IOException e) {
	             e.printStackTrace();
	         } catch (ClassNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

	    }
}
